name: Create subdomian in CF from user's input 

# Triggers the workflow on api call
on:
  repository_dispatch:
    types: [subdomain]
    
env:
  DOMAIN_NAME: ${{ github.event.client_payload.domain_name }}   
  EKS_CLUSTER: dev
  EKS_REGION: us-east-2


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  set-up domain:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     - name: Checkout
       uses: actions/checkout@v2
            
    # AWS Credentials
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.EKS_REGION }}

    # Get the EKS credentials so we can deploy to the cluster
    - run: |-
        aws eks --region $EKS_REGION update-kubeconfig --name $EKS_CLUSTER
      
     - name: Update CloudFlare DNS with Cluster IP 
       run: |-
         # purge any existing records for our AWS subdomain
         existing_records=( $(curl -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_DNS_ZONE }}/dns_records?type=A&name=${DOMAIN_NAME}.sreyo.in" \
            -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
            -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
            -H "Content-Type: application/json"   | jq -r '.result[].id') )
         for record in ${existing_records[@]}; do
           curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_DNS_ZONE }}/dns_records/${record}" \
              -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
              -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
              -H "Content-Type: application/json"
         done
      
        # Create new record with latest cluster external IP.
        #CLUSTER_IP=34.136.63.109
        CLUSTER_HOSTNAME=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_DNS_ZONE }}/dns_records" \
           -H "X-Auth-Email: ${{ secrets.CLOUDFLARE_EMAIL }}" \
           -H "X-Auth-Key: ${{ secrets.CLOUDFLARE_API_KEY }}" \
           -H "Content-Type: application/json" \
           --data '{"type":"CNAME","name":"'${DOMAIN_NAME}'","content":"'${CLUSTER_HOSTNAME}'","ttl":120,"priority":10,"proxied":true}'       
